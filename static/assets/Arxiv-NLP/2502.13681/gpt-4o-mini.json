{
    "title": "An LLM-based Agent for Reliable Docker Environment Configuration",
    "author": "Ruida Hu (Harbin Institute of Technology, Shenzhen), Xinchen Wang (Harbin Institute of Technology, Shenzhen), Chao Peng (ByteDance), Cuiyun Gao (Harbin Institute of Technology, Shenzhen), ...",
    "quality": 7,
    "relevance": 5,
    "relevance_why": "",
    "field": "Applications-Software Engineering",
    "background": "Automatically configuring a software development environment in Docker containers to run arbitrary Python repositories efficiently.",
    "contribution": "This paper introduces Repo2Run, a large language model (LLM) agent that automates the setup of Python coding environments by generating runnable Dockerfiles, achieving an 86.0% success rate on configuration tasks.",
    "technical_comparison": {
        "prior_work": "Previous methods for environment configuration often relied on manual scripting or simplistic automated tools that could not guarantee successful setups.",
        "novelty": "Repo2Run employs a dual-environment architecture and atomic configuration synthesis to ensure each command executes completely, addressing the common problem of environment 'pollution' from failed commands."
    },
    "key_innovation": "The use of a rollback mechanism in a dual-environment setup that allows commands to be executed atomically, ensuring reliable configuration and rollback on failure.",
    "real_world_impact": "This approach streamlines the setup process for developers and teams, potentially reducing the time spent on environment configurations significantly, thus enhancing productivity in development cycles.",
    "limitations": "No specific limitations are mentioned in the summary.",
    "new_terms": {
        "atomic configuration synthesis": "**Atomic configuration synthesis** refers to a method of executing system commands such that each command either runs successfully without changing the environment or is completely rolled back to a prior state if it fails.",
        "LLM agent": "**LLM agent** stands for Large Language Model agent, which is an AI system that uses advanced language models to interpret and execute tasks based on natural language inputs."
    },
    "open_sourcing": ""
}